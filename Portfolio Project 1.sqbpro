<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/manvishkollu/Downloads/stores.db" readonly="0" foreign_keys="0" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="0" synchronous="1"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="3228"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,9:maincustomers"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="customers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="98"/><column index="2" value="177"/><column index="3" value="99"/><column index="5" value="108"/><column index="6" value="163"/><column index="7" value="128"/><column index="8" value="102"/><column index="9" value="72"/><column index="10" value="67"/><column index="11" value="74"/><column index="12" value="145"/><column index="13" value="64"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">SELECT  'Customers' AS table_name,
			   	  '13' AS number_of_columns,
				  COUNT(*) AS number_of_rows
	FROM  customers
	
  UNION ALL
	
SELECT  'Employees' AS table_name,
			   	  '8' AS number_of_columns,
				  COUNT(*) AS number_of_rows
	FROM employees
		
  UNION ALL 
		
SELECT  'Offices' AS table_name,
			   	  '9' AS number_of_columns,
				  COUNT(*) AS number_of_rows	
	FROM offices
		
  UNION ALL
		
SELECT  'OrderDetails' AS table_name,
			   	  '5' AS number_of_columns,
				  COUNT(*) AS number_of_rows
	FROM orderdetails
			
  UNION ALL
			
SELECT  'Orders' AS table_name,
			   	  '7' AS number_of_columns,
				  COUNT(*) AS number_of_rows
    FROM orders
				  
  UNION ALL
				  
SELECT  'Payments' AS table_name,
			   	  '4' AS number_of_columns,
				  COUNT(*) AS number_of_rows 
	FROM payments
	
  UNION ALL
  
SELECT  'ProductLines' AS table_name,
			   	  '4' AS number_of_columns,
				  COUNT(*) AS number_of_rows
	FROM productlines
	
	UNION ALL

SELECT  'Products' AS table_name,
			   	  '13' AS number_of_columns,
				  COUNT(*) AS number_of_rows
    FROM products;</sql><sql name="SQL 2">SELECT p.productCode, ROUND(SUM(quantityOrdered) *1.0 /
															(SELECT  quantityInStock 
																 FROM products p
															 WHERE od.productCode=p.productCode),2) AS low_stock,p.productName,p.productLine
	FROM orderdetails od
	INNER JOIN products p
						ON od.productCode=p.productCode
  GROUP BY p.productCode
  ORDER BY low_stock DESC
LIMIT 10;
 </sql><sql name="Rows/Columns of Tables">SELECT p.productCode, ROUND(SUM(quantityOrdered* priceEach),2) AS product_performance,p.productName,p.productLine
    FROM orderdetails AS od
	INNER JOIN products p
						ON p.productCode=od.productCode
  GROUP BY p.productCode
  ORDER BY product_performance DESC
   LIMIT 10;</sql><sql name="SQL">WITH 

low_stock_products AS (
SELECT productCode, 
ROUND(SUM(quantityOrdered) *1.0 /
															(SELECT  quantityInStock 
																 FROM products p
															 WHERE od.productCode=p.productCode),2) AS low_stock																										
	FROM orderdetails od
  GROUP BY productCode
  ORDER BY low_stock DESC
LIMIT 10

)

SELECT productCode, SUM(quantityOrdered* priceEach) AS product_performance
    FROM orderdetails od
	WHERE productCode IN (SELECT productCode FROM low_stock_products)
  GROUP BY productCode 
  ORDER BY product_performance DESC
   LIMIT 10;</sql><sql name="SQL 21">WITH 

low_stock_table AS (
SELECT productCode, 
       ROUND(SUM(quantityOrdered) * 1.0/(SELECT quantityInStock
                                           FROM products p
                                          WHERE od.productCode = p.productCode), 2) AS low_stock
  FROM orderdetails od
 GROUP BY productCode
 ORDER BY low_stock DESC
 LIMIT 10
)

SELECT productCode, 
       SUM(quantityOrdered * priceEach) AS prod_perf
  FROM orderdetails od
 WHERE productCode IN (SELECT productCode
                         FROM low_stock_table)
 GROUP BY productCode 
 ORDER BY prod_perf DESC
 LIMIT 10;</sql><sql name="SQL 15">SELECT o.customerNumber, SUM(quantityOrdered *(priceEach-buyPrice)) AS profit_per_customer
FROM orders o
INNER JOIN orderdetails od
		ON o.orderNumber = od.orderNumber
INNER JOIN products p
		ON od.productCode = p.productCode
GROUP BY customerNumber;</sql><sql name="SQL 17">WITH 
VIP_customers AS (
SELECT o.customerNumber, SUM(quantityOrdered * (priceEach - buyPrice)) AS revenue
  FROM products p
  JOIN orderdetails od
    ON p.productCode = od.productCode
  JOIN orders o
    ON o.orderNumber = od.orderNumber
 GROUP BY o.customerNumber
 ) 
 
SELECT contactLastName, contactFirstName,city,country, vip.revenue
    FROM customers c
  INNER JOIN VIP_customers vip
					  ON c.customerNumber=vip.customerNumber
 ORDER BY vip.revenue 
 LIMIT 5;
 
 </sql><sql name="SQL 19">WITH 
VIP_customers AS (
SELECT o.customerNumber, SUM(quantityOrdered * (priceEach - buyPrice)) AS revenue
  FROM products p
  JOIN orderdetails od
    ON p.productCode = od.productCode
  JOIN orders o
    ON o.orderNumber = od.orderNumber
 GROUP BY o.customerNumber
 ) 
 
SELECT contactLastName, contactFirstName,city,country, vip.revenue
    FROM customers c
  INNER JOIN VIP_customers vip
					  ON c.customerNumber=vip.customerNumber
 ORDER BY vip.revenue DESC
 LIMIT 5;
 </sql><sql name="SQL 18">WITH 
money_on_marketing AS (
SELECT o.customerNumber, SUM(quantityOrdered * (priceEach - buyPrice)) AS revenue
  FROM products p
  JOIN orderdetails od
    ON p.productCode = od.productCode
  JOIN orders o
    ON o.orderNumber = od.orderNumber
 GROUP BY o.customerNumber
 ) 
 
 SELECT AVG(mm.revenue) AS AVERAGE_PROFITS_PER_CUSTOMER
    FROM customers c
  INNER JOIN money_on_marketing mm
					  ON c.customerNumber=mm.customerNumber
 LIMIT 5;</sql><current_tab id="0"/></tab_sql></sqlb_project>
